"use client";
import React, { useEffect, useRef, useState } from 'react';
import '@/assets/shareDoc/share.css';
import Link from 'next/link';
import { styled } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Paper from '@mui/material/Paper';
import { Container, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, TextField, Stack, Typography, Pagination } from '@mui/material';
import axios from 'axios';
import { useRouter, useSearchParams } from 'next/navigation'


const Item = styled(Paper)(({ theme }) => ({
    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
    ...theme.typography.body2,
    padding: theme.spacing(2),
    textAlign: 'center',
    color: theme.palette.text.secondary,
}));

export default function Page() {
    const [doc, setDoc] = useState([]);
    const [search, setSearch] = useState('');
    const [page, setPage] = useState(1)
    const [totalPage, setTotalPage] = useState(0)
    const handlePage = (event, value) => {
        setPage(value)
    }
    const searchParams = useSearchParams();
    const router = useRouter()

    useEffect(() => {
        const searchQuery = searchParams.get('search');
        const pageQuery = searchParams.get('page');
        if (searchQuery) {
            setSearch(searchQuery);
        }
        if (pageQuery) {
            setPage(pageQuery)
        }
    }, [searchParams]);


    useEffect(() => {
        const fetchData = async () => {
            try {
                const viewProduct = await axios.get(`/api/pages/sharedoc?search=${search}&page=${page}`);
                setDoc(viewProduct.data.data.data);
                setTotalPage(viewProduct.data.data.totalPage)
            } catch (error) {
                console.log(error);
            }
        };

        fetchData();
    }, [search, page]);
    useEffect(() => {
        router.push(`shareDocs/?search=${encodeURIComponent(search)}&page=${encodeURIComponent(page)}`, undefined, { shallow: true });
    }, [search, page]);
    const handleKeyDown = (event) => {
        if (event.key === 'Enter' && search.trim()) {
            setPage(1);
        }
    };
    const handleText = (dec) => {
        return dec.split(' ')[0]
    };
    return (
        <>
            <section className="container">

                <Container sx={{ bgcolor: '#e0e0e0', borderRadius: 2, color: "black" }}>
                    <Typography variant="h5" align="center" gutterBottom>
                        Ch√†o m·ªçi ng∆∞·ªùi! Ch√†o m·ª´ng ƒë·∫øn v·ªõi trang Share T·∫•t C·∫£ C√°c Kh√≥a H·ªçc FREE!
                    </Typography>

                    <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderRadius: 2 }}>
                        <Typography variant="h6" gutterBottom>
                            Nguy√™n nh√¢n th√†nh l·∫≠p trang n√†y:
                        </Typography>

                        <Typography variant="body1" sx={{ mb: 2 }}>
                            ‚Ä¢ <strong>C·∫£m th·∫•y b·ª±c b·ªôi:</strong> M√¨nh kh√¥ng th·ªÉ ch·ªãu n·ªïi nh·ªØng ng∆∞·ªùi th∆∞·ªùng xuy√™n share kh√≥a h·ªçc tr√™n m·∫°ng x√£ h·ªôi
                            nh∆∞ Facebook, TikTok, v√† ch·ªâ nh·∫Øn tin cho m√¨nh m√† kh√¥ng th√®m tr·∫£ l·ªùi. H·ªç th∆∞·ªùng ƒëƒÉng c√°c kh√≥a h·ªçc mi·ªÖn ph√≠ nh∆∞ng l·∫°i ·∫©n
                            √Ω b√°n kh√≥a h·ªçc, ho·∫∑c spam qu·∫£ng c√°o c√°c trang nh∆∞ Teach28. Ch√≠nh v√¨ ƒëi·ªÅu ƒë√≥, m√¨nh quy·∫øt ƒë·ªãnh t·∫°o ra trang n√†y!
                        </Typography>

                        <Typography variant="body1" sx={{ mb: 2 }}>
                            ‚Ä¢ <strong>Chia s·∫ª ki·∫øn th·ª©c:</strong> M√¨nh mu·ªën gi√∫p ƒë·ª° nh·ªØng ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu c√≥ c∆° h·ªôi ti·∫øp c·∫≠n nh·ªØng ki·∫øn th·ª©c b·ªï
                            √≠ch m·ªôt c√°ch d·ªÖ d√†ng h∆°n. Ch√∫ng ta ch√≠nh l√† m·∫ßm m·ªëng cho s·ª± ph√°t tri·ªÉn c·ªßa ƒë·∫•t n∆∞·ªõc!
                        </Typography>

                        <Typography variant="body1" sx={{ mb: 2 }}>
                            <span role="img" aria-label="hand-icon">üëâ</span> N·∫øu b·∫°n bi·∫øt kh√≥a h·ªçc n√†o hay, h√£y g·ª≠i v·ªÅ email:
                            <Link href="mailto:hotancdat17@gmail.com" sx={{ ml: 1, fontWeight: 'bold' }}>
                                hodat4115@gmail.com
                            </Link>
                            ƒë·ªÉ m√¨nh c√≥ th·ªÉ chia s·∫ª ƒë·∫øn m·ªçi ng∆∞·ªùi.
                        </Typography>
                    </Box>

                    <Divider sx={{ my: 2 }} />

                    <Typography variant="body2" align="center">
                        P/S: Website c√≥ th·ªÉ ch∆∞a ho√†n h·∫£o, mong m·ªçi ng∆∞·ªùi th√¥ng c·∫£m. M√¨nh quen l√†m BackEnd h∆°n n√™n FrontEnd c√≤n g√† l·∫Øm(th·ª±c t·∫ø m√¨nh L∆Ø·ªúI =]])!{' '}

                    </Typography>

                </Container>

                <section className="containerGrid">

                    <div style={{ background: "white ", padding: "12px" }}>
                        {/* Search Input */}
                        <TextField
                            label="Search"
                            variant="outlined"
                            sx={{ marginBottom: "12px" }}
                            onChange={e => setSearch(e.target.value)}
                            onKeyDown={handleKeyDown}
                        />

                        {/* Table */}
                        <TableContainer component={Paper} sx={{ borderRadius: 2 }}>
                            <Table sx={{ minWidth: 650 }} aria-label="simple table">
                                <TableHead>
                                    <TableRow>
                                        <TableCell align="left">Kh√≥a h·ªçc</TableCell>
                                        <TableCell align="left">N·ªôi dung</TableCell>
                                        <TableCell align="right">Link</TableCell>
                                    </TableRow>
                                </TableHead>
                                <TableBody>
                                    {doc.map((item, index) => (
                                        <TableRow hover key={index}>
                                            <TableCell>{handleText(item.title)}</TableCell>
                                            <TableCell>{item.title}</TableCell>
                                            <TableCell align="right">
                                                <Link style={{ textDecoration: "none" }} target='_bank' href={item.link}> <Button variant="outlined">Link</Button></Link>
                                            </TableCell>
                                        </TableRow>
                                    ))}
                                </TableBody>
                            </Table>
                        </TableContainer>


                        {/* Pagination */}
                        <Stack spacing={2} sx={{ mt: 2 }}>
                            <Typography>Page: {page}</Typography>
                            <Pagination count={totalPage} page={page} onChange={handlePage} />
                        </Stack>
                    </div>

                </section>
            </section>
        </>
    );
}
